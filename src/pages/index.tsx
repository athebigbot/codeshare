import { type NextPage } from "next";
import Head from "next/head";
import Editor from "@monaco-editor/react";
import { useEffect, useState } from "react";
import axios from "axios";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const { query, push } = useRouter();
  const [code, setCode] = useState("");
  const [lang, setLang] = useState("javascript");

  const upload = () => {
    axios({
      url: "/api/create",
      method: "post",
      data: {
        content: code
      }
    }).then((res) => {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
      window.location.href = `/${res.data.id as string}`
    }).catch(() => { console.log("err") });
  };

  // eslint-disable-next-line react-hooks/exhaustive-deps
  const clone = () => {
    axios({
      url: `/api/${query["clone"] as string}`,
      method: "get",
    }).then((res) => {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
      setCode(res.data.content as string);
      void push("");
    }).catch(() => { console.log("err") });
  };

  useEffect(() => {
    if (query["dis"] == "true") return;
    if (query["clone"]) clone();
  }, [clone, query]);

  return (
    <>
      <Head>
        <title>Codeshare</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <nav className="flex items-center justify-between bg-slate-200 p-4">
          <div className="flex">
            <h1 className="mr-2 font-bold">Codeshare</h1>
            <select
              className="mr-3 cursor-pointer appearance-none text-slate-400"
              onChange={(e) => setLang(e.target.value)}
            >
              <option value="javascript" className="text-black">
                javascript
              </option>
              <option value="typescript" className="text-black">
                typescript
              </option>
              <option value="python" className="text-black">
                python
              </option>
              <option value="html" className="text-black">
                html
              </option>
              <option value="css" className="text-black">
                css
              </option>
              <option value="rust" className="text-black">
                rust
              </option>
              <option value="java" className="text-black">
                java
              </option>
              <option value="csharp" className="text-black">
                C#
              </option>
              <option value="cpp" className="text-black">
                C++
              </option>
              <option value="json" className="text-black">
                json
              </option>
              <option value="markdown" className="text-black">
                markdown
              </option>
              <option value="vb" className="text-black">
                Visual Basic
              </option>
              <option value="scss" className="text-black">
                SCSS
              </option>
              <option value="less" className="text-black">
                LESS
              </option>
              <option value="php" className="text-black">
                php
              </option>
              <option value="batch" className="text-black">
                batch
              </option>
              <option value="lua" className="text-black">
                lua
              </option>
              <option value="ruby" className="text-black">
                ruby
              </option>
              <option value="coffeescript" className="text-black">
                coffeescript
              </option>
              <option value="powershell" className="text-black">
                powershell
              </option>
            </select>
          </div>

          <div className="flex">
            <a className="mr-3 cursor-pointer text-gray-700 hover:text-gray-900" onClick={() => upload()}>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="icon icon-tabler icon-tabler-device-floppy h-7 w-7 hover:scale-105"
                width="44"
                height="44"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="#000000"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M6 4h10l4 4v10a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2" />
                <circle cx="12" cy="14" r="2" />
                <polyline points="14 4 14 8 8 8 8 4" />
              </svg>
            </a>
          </div>
        </nav>
        <Editor
          height="90vh"
          className="h-screen w-screen mt-3"
          language={lang}
          value={code}
          onChange={(e) => setCode(e || "")}
        />
      </main>
    </>
  );
};

export default Home;
